/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface PdiFlexSpacer {

    }
  }

  interface HTMLPdiFlexSpacerElement extends StencilComponents.PdiFlexSpacer, HTMLStencilElement {}

  var HTMLPdiFlexSpacerElement: {
    prototype: HTMLPdiFlexSpacerElement;
    new (): HTMLPdiFlexSpacerElement;
  };
  interface HTMLElementTagNameMap {
    'pdi-flex-spacer': HTMLPdiFlexSpacerElement;
  }
  interface ElementTagNameMap {
    'pdi-flex-spacer': HTMLPdiFlexSpacerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'pdi-flex-spacer': JSXElements.PdiFlexSpacerAttributes;
    }
  }
  namespace JSXElements {
    export interface PdiFlexSpacerAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PdiHeader {

    }
  }

  interface HTMLPdiHeaderElement extends StencilComponents.PdiHeader, HTMLStencilElement {}

  var HTMLPdiHeaderElement: {
    prototype: HTMLPdiHeaderElement;
    new (): HTMLPdiHeaderElement;
  };
  interface HTMLElementTagNameMap {
    'pdi-header': HTMLPdiHeaderElement;
  }
  interface ElementTagNameMap {
    'pdi-header': HTMLPdiHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'pdi-header': JSXElements.PdiHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface PdiHeaderAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PdiMediaController {
      'btnLabels': any;
      'controllerIconColor': string;
      'controllerSize': string;
    }
  }

  interface HTMLPdiMediaControllerElement extends StencilComponents.PdiMediaController, HTMLStencilElement {}

  var HTMLPdiMediaControllerElement: {
    prototype: HTMLPdiMediaControllerElement;
    new (): HTMLPdiMediaControllerElement;
  };
  interface HTMLElementTagNameMap {
    'pdi-media-controller': HTMLPdiMediaControllerElement;
  }
  interface ElementTagNameMap {
    'pdi-media-controller': HTMLPdiMediaControllerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'pdi-media-controller': JSXElements.PdiMediaControllerAttributes;
    }
  }
  namespace JSXElements {
    export interface PdiMediaControllerAttributes extends HTMLAttributes {
      'btnLabels'?: any;
      'controllerIconColor'?: string;
      'controllerSize'?: string;
      'onOnPlayerMediaUpdate'?: (event: CustomEvent) => void;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface PdiRating {
      'maxValue': number;
      'value': number;
    }
  }

  interface HTMLPdiRatingElement extends StencilComponents.PdiRating, HTMLStencilElement {}

  var HTMLPdiRatingElement: {
    prototype: HTMLPdiRatingElement;
    new (): HTMLPdiRatingElement;
  };
  interface HTMLElementTagNameMap {
    'pdi-rating': HTMLPdiRatingElement;
  }
  interface ElementTagNameMap {
    'pdi-rating': HTMLPdiRatingElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'pdi-rating': JSXElements.PdiRatingAttributes;
    }
  }
  namespace JSXElements {
    export interface PdiRatingAttributes extends HTMLAttributes {
      'maxValue'?: number;
      'onOnRatingUpdated'?: (event: CustomEvent) => void;
      'value'?: number;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;